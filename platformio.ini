[env]
test_build_src = yes
extra_scripts =
    pre:pio/fix_include_paths.py
    post:pio/fix_system_includes.py
check_tool = cppcheck, clangtidy
check_flags =
	clangtidy: --config-file=.clang-tidy
	cppcheck: --suppressions-list=.cppcheck.suppress --inline-suppr
build_unflags = -std=gnu++11
build_flags = -I./src/ -Wno-parentheses

[env:test]
test_framework = unity
build_type = debug
build_flags = ${env.build_flags} -O0

[env:native]
extends = env:test
platform = ./platforms/clang

[env:arduino]
extends = env:test
platform = atmelavr
framework = arduino
monitor_speed = 115200
monitor_echo = yes
platform_packages =
	toolchain-atmelavr@file:///opt/homebrew/opt/avr-gcc@14/
build_flags =
    ${env.build_flags}
    -std=gnu++23
    -Wno-subobject-linkage
    --sysroot=/opt/homebrew/opt/avr-gcc@14/avr/
    -I/opt/homebrew/opt/avr-gcc@14/avr/include

[env:nano]
extends = env:arduino
board = nanoatmega328new
upload_protocol = arduino

[env:micro_pro]
extends = env:arduino
board = micro
upload_protocol = avr109
board_upload.use_1200bps_touch = false
board_upload.wait_for_upload_port = false

[env:espressif8266]
extends = env:test
platform = espressif8266
board = d1_mini
framework = arduino
monitor_speed = 115200
upload_speed = 921600
monitor_filters = esp8266_exception_decoder, default
board_build.filesystem = littlefs
build_unflags =
    ${env:test.build_unflags}
    -std=gnu++17
build_flags =
    ${env:test.build_flags}
    -std=c++20
    -xc++
    -DMONITOR_SPEED=${this.monitor_speed}
    -DSML_ESP8266
    -fconcepts-diagnostics-depth=10

[env:compdb-native]
extends = env:native
build_src_filter = +<../test/**>
build_flags =
    ${env:native.build_flags}
    -I./test/
    -I./src/
    -I./lib/stdlike/src
    -I./lib/supp/src

[env:compdb-nano]
extends = env:nano
build_src_filter = +<../test/**>
build_flags =
    ${env:nano.build_flags}
    -I./test/
    -I./src/
    -I./lib/stdlike/src
    -I./lib/supp/src
    -I./.pio/libdeps/nano/Unity/src

[env:compdb-espressif8266]
extends = env:espressif8266
build_src_filter = +<../test/**>
build_flags =
    ${env:espressif8266.build_flags}
    -I./test/
    -I./src/
    -I./lib/stdlike/src
    -I./lib/supp/src
    -I./.pio/libdeps/espressif8266/Unity/src
